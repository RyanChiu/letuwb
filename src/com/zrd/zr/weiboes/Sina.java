package com.zrd.zr.weiboes;

import java.io.IOException;
import java.io.Serializable;

import android.os.Handler;
import android.os.Message;

import com.weibo.sdk.android.Oauth2AccessToken;
import com.weibo.sdk.android.WeiboException;
import com.weibo.sdk.android.api.AccountAPI;
import com.weibo.sdk.android.api.UsersAPI;
import com.weibo.sdk.android.custom.Status2;
import com.weibo.sdk.android.custom.User2;
import com.weibo.sdk.android.net.RequestListener;

import weibo4android.Weibo;
import weibo4android.OAuthConstant;
import weibo4android.org.json.JSONException;
import weibo4android.org.json.JSONObject;

public class Sina implements Serializable {
	
	/**
	 * generated by system 
	 */
	private static final long serialVersionUID = 7590823845763389527L;

	private Weibo mWeibo = null;
	
	/*
	 * when some account of SINA_weibo actually logged in,
	 * we told every activities that they should open some
	 * rights for it.
	 */
	private User2 mLoggedInUser = null;
	private AccountAPI accountApi;
	private UsersAPI usersApi;
	private boolean gettingUser = false;
	private Handler mHandler;
	
	public final static int REFRESH_USERBAR = 0x20130319;
	
	/*
	 * implement "tag"
	 */
	private Object mTag = null;
	
	public Object getTag() {
		return mTag;
	}

	public void setTag(Object tag) {
		this.mTag = tag;
	}
	
	public Sina(Handler handler) {
		this.mHandler = handler;
	}
	
	public Sina() {
		this(false);
	}
	
	public Sina(boolean noDefaultAccessToken) {
		mWeibo = OAuthConstant.getInstance().getWeibo();
		
		/*
		 * the necessary key/secret pair that needed when
		 * try to using the API of SINA_weibo
		 */
		mWeibo.setOAuthConsumer(
			Weibo.CONSUMER_KEY,
			Weibo.CONSUMER_SECRET
		);
		
		if (noDefaultAccessToken) {
			mWeibo.setOAuthAccessToken("", "");
		} else {
			/*
			 * we use the following tokens for default using,
			 * but don't allow further more actions, like submit
			 * a SINA_weibo or something like that.
			 */
			mWeibo.setOAuthAccessToken(
				Weibo.ANFFERNEE_TOKEN, 
				Weibo.ANFFERNEE_TOKEN_SECRET
			);
		}
	}
	
	public Weibo getWeibo() {
		return mWeibo;
	}

	public void setLoggedInUser(User2 user) {
		mLoggedInUser = user;
		gettingUser = false;
	}
	
	public User2 getLoggedInUser() {
		return mLoggedInUser;
	}
	
	public User2 getLoggedInUser(Oauth2AccessToken token) {
		gettingUser = true;
		mLoggedInUser = null;
		accountApi = new AccountAPI(token);
		usersApi = new UsersAPI(token);
		accountApi.getUid(new RequestListener() {

			@Override
			public void onComplete(String response) {
				// TODO Auto-generated method stub
				try {
					JSONObject json = new JSONObject(response);
					long uid = json.getLong("uid");
					
					usersApi.show(uid, new RequestListener() {

						@Override
						public void onComplete(String response) {
							// TODO Auto-generated method stub
							try {
								JSONObject json = new JSONObject(response);
								try {
									User2 usr = new User2(json);
									setLoggedInUser(usr);
									Message msg = new Message();
									msg.what = Sina.REFRESH_USERBAR;
									mHandler.sendMessage(msg);
								} catch (weibo4android.WeiboException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
									setLoggedInUser(null);
								}
							} catch (JSONException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
								setLoggedInUser(null);
							}
						}

						@Override
						public void onIOException(IOException e) {
							// TODO Auto-generated method stub
							e.printStackTrace();
							setLoggedInUser(null);
						}

						@Override
						public void onError(WeiboException e) {
							// TODO Auto-generated method stub
							e.printStackTrace();
							setLoggedInUser(null);
						}
						
					});
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					setLoggedInUser(null);
				}

			}

			@Override
			public void onIOException(IOException e) {
				// TODO Auto-generated method stub
				e.printStackTrace();
				setLoggedInUser(null);
			}

			@Override
			public void onError(WeiboException e) {
				// TODO Auto-generated method stub
				e.printStackTrace();
				setLoggedInUser(null);
			}
			
		});
		
		return mLoggedInUser;
	}
	
	public boolean isLoggedIn() {
		return (mLoggedInUser != null);
	}
	
	public XStatus getXStatus() {
		return new XStatus();
	}
	
	public boolean isGettingUser() {
		return gettingUser;
	}

	public class XStatus implements Serializable {
		/**
		 * just in order to record the comments & reposts
		 * for the original status
		 */
		private static final long serialVersionUID = -4063554782772695640L;
		private Status2 status;
		private long comments = 0;
		private long reposts = 0;
		public void setStatus(Status2 status) {
			this.status = status;
		}
		public Status2 getStatus() {
			return status;
		}
		public void setComments(long comments) {
			this.comments = comments;
		}
		public long getComments() {
			return comments;
		}
		public void setReposts(long reposts) {
			this.reposts = reposts;
		}
		public long getReposts() {
			return reposts;
		}
	}
		
}
